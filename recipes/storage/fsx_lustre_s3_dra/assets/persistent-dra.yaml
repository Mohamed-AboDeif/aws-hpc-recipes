AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an FSx for Lustre filesystem and associates it with an S3 bucket using a Data Repository Assocation. 

### Stack metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Filesystem Options
        Parameters:
          - Capacity
          - PerUnitStorageThroughput
          - Compression
          - LustreVersion
      - Label:
          default: Data Repository Association Options
        Parameters:
          - DataRepositoryPath
          - FileSystemPath
          - ReadOnlyDra
      - Label:
          default: Networking and Access
        Parameters:
          - VpcId
          - SubnetId

Parameters:
  VpcId:
    Description: VPC where you will deploy the FSx filesystem
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Description: Subnet where you will deploy the FSx filesystem (must be in same VPC)
    Type: AWS::EC2::Subnet::Id
  Capacity:
    Description: Storage capacity in GiB (1200 or increments of 2400)
    Type: Number
    Default: 1200
  PerUnitStorageThroughput:
    Description: Provisioned Read/Write (MB/s/TiB)
    Type: Number
    Default: 1000
    AllowedValues:
      - 125
      - 250
      - 500
      - 1000
  Compression:
    Description: Data compression type
    Type: String
    AllowedValues:
      - "LZ4"
      - "NONE"
    Default: "LZ4"
  LustreVersion:
    Description: Lustre software version 
    Type: String
    AllowedValues:
      - "2.15"
      - "2.12"
    Default: "2.12"
  DataRepositoryPath:
    Description: Path to the Amazon S3 data repository to link with the file system (s3://myBucket/myPrefix/)
    Type: String
    Default: ''
  FileSystemPath:
    Description: Path on FSx for Lustre Filesystem to link with the data repository
    Type: String
    Default: "/data/s3"
  ReadOnlyDra:
    Description: Create a read-only DRA
    Type: String
    Default: "False"
    AllowedValues:
      - "True"
      - "False"

Conditions:
  CreateReadOnlyDra: !Equals 
    - !Ref ReadOnlyDra
    - "True"
  CreateReadWriteDra: !Equals 
    - !Ref ReadOnlyDra
    - "False"

Mappings:
  Recipes:
    Constants:
      Version: main

Resources:

  FSxLFilesystem:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        VpcId: !Ref VpcId
        SubnetId: !Ref SubnetId
        Capacity: !Ref Capacity
        Compression: !Ref Compression
        PerUnitStorageThroughput: !Ref PerUnitStorageThroughput
        LustreVersion: !Ref LustreVersion
      TemplateURL: !Sub
        - https://aws-hpc-recipes.s3.us-east-1.${AWS::URLSuffix}/${Version}/recipes/storage/fsx_lustre/assets/persistent.yaml
        - { Version: !FindInMap [Recipes, Constants, Version] }

  # NOTE: Only one of these associations will be created

  FSxLDraReadOnly:
    Type: AWS::FSx::DataRepositoryAssociation
    Condition: CreateReadOnlyDra
    Properties: 
      BatchImportMetaDataOnCreate: true
      DataRepositoryPath: !Ref DataRepositoryPath
      FileSystemId: !GetAtt [ FSxLFilesystem , Outputs.FSxLustreFilesystemId ]
      FileSystemPath: !Ref FileSystemPath
      S3: 
        # Sets up a S3=>Lustre sync
        AutoImportPolicy:
          Events:
            - NEW
            - CHANGED
            - DELETED

  FSxLDraReadWrite:
    Type: AWS::FSx::DataRepositoryAssociation
    Condition: CreateReadWriteDra
    Properties: 
      BatchImportMetaDataOnCreate: true
      DataRepositoryPath: !Ref DataRepositoryPath
      FileSystemId: !GetAtt [ FSxLFilesystem , Outputs.FSxLustreFilesystemId ]
      FileSystemPath: !Ref FileSystemPath
      # Set up a two-way sync with the S3 bucket
      S3: 
        # Sets up a Lustre=>S3 sync
        AutoExportPolicy:
          Events:
            - NEW
            - CHANGED
            - DELETED
        # Sets up a S3=>Lustre sync
        AutoImportPolicy:
          Events:
            - NEW
            - CHANGED
            - DELETED

Outputs:
  FSxLustreFilesystemId:
    Description: The ID of the FSxL filesystem that has been created
    Value: !GetAtt [ FSxLFilesystem , Outputs.FSxLustreFilesystemId ]
    Export:
      Name: !Sub ${AWS::StackName}-FSxLustreFilesystemId
  FSxLustreSecurityGroupId:
    Description: The ID of the security group allowing access to FSxL filesystem
    Value: !GetAtt [ FSxLFilesystem , Outputs.FSxLustreSecurityGroupId ]
    Export:
      Name: !Sub ${AWS::StackName}-FSxLustreSecurityGroupId
